<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- <beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.postgresql.Driver" />
		<beans:property name="url"
			value="jdbc:postgresql://localhost:5432/photostudio?useEncoding=true&amp;characterEncoding=UTF-8" />
		<beans:property name="username" value="postgres" />
		<beans:property name="password" value="1992" />
	</beans:bean> -->
	
	<beans:bean class="java.net.URI" id="dbUrl">
         <beans:constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
    </beans:bean>

    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
         <beans:property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
         <beans:property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
         <beans:property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
    </beans:bean>

	<!-- Configure Hibernate 5 Session Facotry -->
	<beans:bean id="hibernate5AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource">
			<beans:ref bean="dataSource" />
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL94Dialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.roboxandr.Roboxandr.models.Album</beans:value>
				<beans:value>com.roboxandr.Roboxandr.models.Photo</beans:value>
				<beans:value>com.roboxandr.Roboxandr.models.Article</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="photoDAO" class="com.roboxandr.Roboxandr.PhotoDAOImpl">
		<beans:property name="factory"
			ref="hibernate5AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="photoService" class="com.roboxandr.Roboxandr.PhotoServiceImpl">
		<beans:property name="photoDAO" ref="photoDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="articleDAO" class="com.roboxandr.Roboxandr.ArticleDAOImpl">
		<beans:property name="factory"
			ref="hibernate5AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="articleService" class="com.roboxandr.Roboxandr.ArticleServiceImpl">
		<beans:property name="articleDAO" ref="articleDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="jacksonService" class="com.roboxandr.Roboxandr.JacksonService.JacksonServiceImpl">
	</beans:bean>
    <context:annotation-config/>
	<context:component-scan base-package="com.roboxandr.Roboxandr" />
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate5AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="1000000"></beans:property>
	</beans:bean>
</beans:beans>
